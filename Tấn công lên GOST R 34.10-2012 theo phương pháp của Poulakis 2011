"Sinh chu ky...";
p:=57896044618658097711785492504343953926634992332820282019728792003956564821041;
K := GF(p);
E:=EllipticCurve([K|7,43308876546767276905765904595650931995942111794451039583252968842033849580414]);
q:=57896044618658097711785492504343953927082934583725450622380973592137631069619;
P:=E![2,4018974056539037503335449422937059775635739389905545080690979365213431566280];

a := 1120045641380807194077085;
"khoa ky dai han a=",a;
Q := a*P;


h_m:=7024333237208647354832195679971465048439776467050147633455520126141368155876;
k:=19152966776269457605684807134567790757751502700064584510300040429252590201305;
"khoa ky tuc thoi k=",k;
kp_seq := ElementToSequence (k*P);
r:= (IntegerRing()!kp_seq[1]) mod q;
s:= (k*h_m + a*r) mod q;
"Da sinh chu ky xong";
"r=",r;
"s=",s;
"kiem tra chu ky..."; 
r in [1..q-1];
s in [1..q-1];
w := InverseMod (h_m, q);
u1 := s*w mod q; u2 := -r*w mod q;
temp := u1*P + u2*Q;
temp_seq := ElementToSequence (temp);
v := (IntegerRing()!temp_seq[1]) mod q;
"Chu ky la:", v eq r;
"Tan cong ...";
X:=a+1;
Y:= InverseMod(k,q)+1;
Tancong1_2011:=function(h_m,r,s)
tg:=0;
// buoc 1
b:=((InverseMod(r,q)*(h_m mod q))) mod q;    //b=h(m)*r^-1 (mod q)
c:=((InverseMod(-r,q))*(s mod q)) mod q;    //c=-r^-1*s (mod q)
// Buoc 2
M:= Matrix(IntegerRing(), 3, 3, [q,0,0,0,q*Y,0,b,c*Y,X*Y]);
// Buoc 3
LLLM:=LLL(M);
// Buoc 4
delta0:=(IntegerRing()!(LLLM[1][1]));
delta1:=(IntegerRing()!(LLLM[1][2]/Y));
delta2:=(IntegerRing()!(LLLM[1][3]/(X*Y)));
// Buoc 5: Xay dung da thuc
R<x,y> := PolynomialRing(IntegerRing(),2);
rho:=delta0+delta1*y+delta2*x*y;
heso:=Coefficients(rho);
Db:=Divisors(Abs(heso[3]));
for i in [1 .. #Db] do
x:=-(heso[3]/Db[i]+heso[2])/heso[1];
if x in IntegerRing() then
y:=Db[i];
x0:=x;
tg:=1;
end if;
end for;
// Buoc 6 va Buoc 7
if tg eq 1 then
    Q1:=(IntegerRing()!x0)*P;
    if Q1 eq Q then
    return "Kiem tra khoa ky dai han", x0;
    end if;
end if;
if tg eq 0 then
return "Tan cong khong tim duoc khoa a";
end if;
end function;
Tancong1_2011(h_m,r,s);
